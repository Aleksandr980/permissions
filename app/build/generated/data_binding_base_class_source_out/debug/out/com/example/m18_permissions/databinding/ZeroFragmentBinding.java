// Generated by view binder compiler. Do not edit!
package com.example.m18_permissions.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.m18_permissions.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ZeroFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final ConstraintLayout fragmentZero;

  @NonNull
  public final ImageView imagePreview;

  @NonNull
  public final PreviewView viewFinder;

  private ZeroFragmentBinding(@NonNull ConstraintLayout rootView, @NonNull Button button,
      @NonNull ConstraintLayout fragmentZero, @NonNull ImageView imagePreview,
      @NonNull PreviewView viewFinder) {
    this.rootView = rootView;
    this.button = button;
    this.fragmentZero = fragmentZero;
    this.imagePreview = imagePreview;
    this.viewFinder = viewFinder;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ZeroFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ZeroFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.zero_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ZeroFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      ConstraintLayout fragmentZero = (ConstraintLayout) rootView;

      id = R.id.image_preview;
      ImageView imagePreview = ViewBindings.findChildViewById(rootView, id);
      if (imagePreview == null) {
        break missingId;
      }

      id = R.id.view_finder;
      PreviewView viewFinder = ViewBindings.findChildViewById(rootView, id);
      if (viewFinder == null) {
        break missingId;
      }

      return new ZeroFragmentBinding((ConstraintLayout) rootView, button, fragmentZero,
          imagePreview, viewFinder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
