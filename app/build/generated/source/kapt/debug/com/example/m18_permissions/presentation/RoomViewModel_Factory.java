// Generated by Dagger (https://dagger.dev).
package com.example.m18_permissions.presentation;

import com.example.m18_permissions.domain.GetGalleryUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation"
})
public final class RoomViewModel_Factory implements Factory<RoomViewModel> {
  private final Provider<GetGalleryUseCase> getGalleryUseCaseProvider;

  public RoomViewModel_Factory(Provider<GetGalleryUseCase> getGalleryUseCaseProvider) {
    this.getGalleryUseCaseProvider = getGalleryUseCaseProvider;
  }

  @Override
  public RoomViewModel get() {
    return newInstance(getGalleryUseCaseProvider.get());
  }

  public static RoomViewModel_Factory create(
      Provider<GetGalleryUseCase> getGalleryUseCaseProvider) {
    return new RoomViewModel_Factory(getGalleryUseCaseProvider);
  }

  public static RoomViewModel newInstance(GetGalleryUseCase getGalleryUseCase) {
    return new RoomViewModel(getGalleryUseCase);
  }
}
